name: CI

on:
  push:
    branches:
      - master
    tags:
      # Version tags.
      #
      # Tags matching this pattern will cause the "release" job below to run,
      # so edit it carefully!  It should not match arbitrary tags.
      - "[0-9]+.[0-9]+.[0-9]+*"
  pull_request:
  workflow_dispatch:

jobs:
  test-source:
    name: test-source (python=${{ matrix.python }} os=${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Install Nextstrain CLI
        run: python3 -m pip install --upgrade '.[dev]'

      - name: Run pytest
        run: pytest -v

  build-dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # Install up-to-date packaging toolchain.
      - run: python3 -m pip install --upgrade pip setuptools wheel
      - run: python3 -m pip install --upgrade build

      # Build dists.
      - run: python3 -m build

      # Upload dists as workflow artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  test-dist:
    needs: build-dist
    name: test-dist (python=${{ matrix.python }} os=${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          # XXX TODO: Add 3.10 here once supported by Conda/Bioconda/Conda Forge.
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # Add -l for setup-integration-tests → setup-miniconda → automatic
        # activation of "test" environment.
        shell: bash -l -eo pipefail {0}
    steps:
      - uses: actions/checkout@v3
        with:
          path: src/

      - uses: ./src/.github/actions/setup-integration-tests
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Install Nextstrain CLI
        run: python3 -m pip install --upgrade dist/nextstrain_cli-*-py3-none-any.whl

      - uses: ./src/.github/actions/run-integration-tests

  doc:
    name: doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Upgrade Python toolchain
        run: python3 -m pip install --upgrade pip setuptools wheel

      - name: Setup docs build environment
        run: python3 -m pip install --upgrade -e '.[dev]'

      - name: Make docs with warnings fatalized
        run: make -C doc dirhtml
        env:
          SPHINXOPTS: -W --keep-going

  release:
    # Restricted to version tags by the "on: push: tags: …" config at the top.
    if: |2
         github.event_name == 'push'
      && github.ref_type == 'tag'
    needs:
      - build-dist
      - test-source
      - test-dist
      - doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - run: python3 -m pip install --upgrade twine

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/

      - run: ./devel/create-github-release "${{github.ref_name}}" dist/*
        permissions:
          metadata: read
          contents: write
